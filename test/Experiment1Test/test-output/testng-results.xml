<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="106" passed="105" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-05-04T13:22:54Z" name="All Test Suite" finished-at="2024-05-04T13:22:54Z" duration-ms="496">
    <groups>
    </groups>
    <test started-at="2024-05-04T13:22:54Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/TermTest.java" finished-at="2024-05-04T13:22:54Z" duration-ms="17">
      <class name="hust.cs.javacourse.search.index.TermTest">
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTerm;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@1563da5]" started-at="2024-05-04T13:22:54Z" name="testTestEquals" data-provider="testTerm" finished-at="2024-05-04T13:22:54Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@20d3d15a]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTerm;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@1563da5]" started-at="2024-05-04T13:22:54Z" name="testTestEquals" data-provider="testTerm" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@2893de87]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.index.AbstractTerm;, int)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@1563da5]" started-at="2024-05-04T13:22:54Z" name="testCompareTo" data-provider="testTerm" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@214b199c]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
        <test-method signature="testGetContent(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@1563da5]" started-at="2024-05-04T13:22:54Z" name="testGetContent" data-provider="testTerm" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContent -->
        <test-method signature="testSetContent(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@1563da5]" started-at="2024-05-04T13:22:54Z" name="testSetContent" data-provider="testTerm" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[We have no dream.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[We have no dream.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetContent -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@1563da5]" started-at="2024-05-04T13:22:54Z" name="testTestToString" data-provider="testTerm" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[We have a dream.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.index.AbstractTerm;, int)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@1563da5]" started-at="2024-05-04T13:22:54Z" name="testCompareTo" data-provider="testTerm" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTerm;@5d740a0f]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@1563da5]" started-at="2024-05-04T13:22:54Z" name="testWriteObject" data-provider="testTerm" finished-at="2024-05-04T13:22:54Z" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[search engine]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/home/charswool/daily/java_course/lab/2024_java_experiment/test/Experiment1Test/test/config/..//ser/Term.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractTerm, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.TermTest@1563da5]" started-at="2024-05-04T13:22:54Z" name="testReadObject" data-provider="testTerm" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[search engine]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/home/charswool/daily/java_course/lab/2024_java_experiment/test/Experiment1Test/test/config/..//ser/Term.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
      </class> <!-- hust.cs.javacourse.search.index.TermTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/TermTest.java -->
    <test started-at="2024-05-04T13:22:54Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/TermTupleTest.java" finished-at="2024-05-04T13:22:54Z" duration-ms="4">
      <class name="hust.cs.javacourse.search.index.TermTupleTest">
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTermTuple;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@587d1d39]" started-at="2024-05-04T13:22:54Z" name="testTestEquals" data-provider="testTermTuple" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTermTuple;@15761df8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTermTuple;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@587d1d39]" started-at="2024-05-04T13:22:54Z" name="testTestEquals" data-provider="testTermTuple" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTermTuple;@7c417213]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractTermTuple, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@587d1d39]" started-at="2024-05-04T13:22:54Z" name="testTestToString" data-provider="testTermTuple" finished-at="2024-05-04T13:22:54Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Search 1 100]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@327b636c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractTermTuple;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.TermTupleTest@587d1d39]" started-at="2024-05-04T13:22:54Z" name="testTestEquals" data-provider="testTermTuple" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractTermTuple;@6ab7a896]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
      </class> <!-- hust.cs.javacourse.search.index.TermTupleTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/TermTupleTest.java -->
    <test started-at="2024-05-04T13:22:54Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/PostingTest.java" finished-at="2024-05-04T13:22:54Z" duration-ms="8">
      <class name="hust.cs.javacourse.search.index.PostingTest">
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@45820e51]" started-at="2024-05-04T13:22:54Z" name="testTestEquals" data-provider="testPosting" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@2133814f]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@45820e51]" started-at="2024-05-04T13:22:54Z" name="testTestEquals" data-provider="testPosting" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@23986957]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@45820e51]" started-at="2024-05-04T13:22:54Z" name="testTestEquals" data-provider="testPosting" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@1e730495]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@45820e51]" started-at="2024-05-04T13:22:54Z" name="testTestEquals" data-provider="testPosting" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@4c15e7fd]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestEquals([Lhust.cs.javacourse.search.index.AbstractPosting;, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@45820e51]" started-at="2024-05-04T13:22:54Z" name="testTestEquals" data-provider="testPosting" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@23f7d05d]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestEquals -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractPosting, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@45820e51]" started-at="2024-05-04T13:22:54Z" name="testTestToString" data-provider="testPosting" finished-at="2024-05-04T13:22:54Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DocId: 1, word freq: 4
    Word positions: [10, 100, 320, 400]
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@7d3a22a9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testSetDocId(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@45820e51]" started-at="2024-05-04T13:22:54Z" name="testSetDocId" data-provider="testPosting" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DocId: 20, word freq: 0
    Word positions: []
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[20]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDocId -->
        <test-method signature="testGetPositions(hust.cs.javacourse.search.index.AbstractPosting, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@45820e51]" started-at="2024-05-04T13:22:54Z" name="testGetPositions" data-provider="testPosting" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DocId: 1, word freq: 4
    Word positions: [10, 100, 320, 400]
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[10, 100, 320, 400]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetPositions -->
        <test-method signature="testSetFreq(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@45820e51]" started-at="2024-05-04T13:22:54Z" name="testSetFreq" data-provider="testPosting" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DocId: 0, word freq: 8
    Word positions: []
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetFreq -->
        <test-method signature="testGetDocId(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@45820e51]" started-at="2024-05-04T13:22:54Z" name="testGetDocId" data-provider="testPosting" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DocId: 1, word freq: 4
    Word positions: [10, 100, 320, 400]
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testGetFreq(hust.cs.javacourse.search.index.AbstractPosting, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@45820e51]" started-at="2024-05-04T13:22:54Z" name="testGetFreq" data-provider="testPosting" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DocId: 1, word freq: 4
    Word positions: [10, 100, 320, 400]
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetFreq -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.index.AbstractPosting;, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@45820e51]" started-at="2024-05-04T13:22:54Z" name="testCompareTo" data-provider="testPosting" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@70be0a2b]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
        <test-method signature="testSort(hust.cs.javacourse.search.index.AbstractPosting, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@45820e51]" started-at="2024-05-04T13:22:54Z" name="testSort" data-provider="testPosting" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DocId: 1, word freq: 4
    Word positions: [10, 100, 320, 400]
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[10, 100, 320, 400]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractPosting, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@45820e51]" started-at="2024-05-04T13:22:54Z" name="testWriteObject" data-provider="testPosting" finished-at="2024-05-04T13:22:54Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DocId: 1, word freq: 4
    Word positions: [10, 100, 320, 400]
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/home/charswool/daily/java_course/lab/2024_java_experiment/test/Experiment1Test/test/config/..//ser/Posting.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testSetPositions(hust.cs.javacourse.search.index.AbstractPosting, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@45820e51]" started-at="2024-05-04T13:22:54Z" name="testSetPositions" data-provider="testPosting" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DocId: 0, word freq: 0
    Word positions: [100, 320, 400]
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[100, 320, 400]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetPositions -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractPosting, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingTest@45820e51]" started-at="2024-05-04T13:22:54Z" name="testReadObject" data-provider="testPosting" finished-at="2024-05-04T13:22:54Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DocId: 1, word freq: 4
    Word positions: [10, 100, 320, 400]
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/home/charswool/daily/java_course/lab/2024_java_experiment/test/Experiment1Test/test/config/..//ser/Posting.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
      </class> <!-- hust.cs.javacourse.search.index.PostingTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/PostingTest.java -->
    <test started-at="2024-05-04T13:22:54Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/PostingListTest.java" finished-at="2024-05-04T13:22:54Z" duration-ms="5">
      <class name="hust.cs.javacourse.search.index.PostingListTest">
        <test-method signature="testAdd(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5ed828d]" started-at="2024-05-04T13:22:54Z" name="testAdd" data-provider="testPostingList" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[DocId: 1, word freq: 4
    Word positions: [1, 2, 3, 4]
, DocId: 2, word freq: 2
    Word positions: [5, 6]
]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@29176cc1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdd -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractPostingList, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5ed828d]" started-at="2024-05-04T13:22:54Z" name="testTestToString" data-provider="testPostingList" finished-at="2024-05-04T13:22:54Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[DocId: 1, word freq: 4
    Word positions: [1, 2, 3, 4]
, DocId: 2, word freq: 2
    Word positions: [5, 6]
]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1fe20588]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testIndexOf(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5ed828d]" started-at="2024-05-04T13:22:54Z" name="testIndexOf" data-provider="testPostingList" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[DocId: 1, word freq: 4
    Word positions: [1, 2, 3, 4]
, DocId: 2, word freq: 2
    Word positions: [5, 6]
]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@147ed70f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIndexOf -->
        <test-method signature="testTestIndexOf(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5ed828d]" started-at="2024-05-04T13:22:54Z" name="testTestIndexOf" data-provider="testPostingList" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[DocId: 1, word freq: 4
    Word positions: [1, 2, 3, 4]
, DocId: 2, word freq: 2
    Word positions: [5, 6]
]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@15b204a1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestIndexOf -->
        <test-method signature="testGet(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5ed828d]" started-at="2024-05-04T13:22:54Z" name="testGet" data-provider="testPostingList" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[DocId: 1, word freq: 4
    Word positions: [1, 2, 3, 4]
, DocId: 2, word freq: 2
    Word positions: [5, 6]
]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@4278a03f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGet -->
        <test-method signature="testRemove(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5ed828d]" started-at="2024-05-04T13:22:54Z" name="testRemove" data-provider="testPostingList" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@61dd025]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemove -->
        <test-method signature="testContains(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5ed828d]" started-at="2024-05-04T13:22:54Z" name="testContains" data-provider="testPostingList" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[DocId: 1, word freq: 4
    Word positions: [1, 2, 3, 4]
]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@2f177a4b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method signature="testTestAdd(hust.cs.javacourse.search.index.AbstractPostingList, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5ed828d]" started-at="2024-05-04T13:22:54Z" name="testTestAdd" data-provider="testPostingList" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[DocId: 1, word freq: 4
    Word positions: [1, 2, 3, 4]
, DocId: 2, word freq: 2
    Word positions: [5, 6]
]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[DocId: 1, word freq: 4
    Word positions: [1, 2, 3, 4]
, DocId: 1, word freq: 4
    Word positions: [2, 4, 3, 1]
, DocId: 2, word freq: 2
    Word positions: [5, 6]
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestAdd -->
        <test-method signature="testSize(hust.cs.javacourse.search.index.AbstractPostingList, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5ed828d]" started-at="2024-05-04T13:22:54Z" name="testSize" data-provider="testPostingList" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[DocId: 1, word freq: 4
    Word positions: [1, 2, 3, 4]
, DocId: 2, word freq: 2
    Word positions: [5, 6]
]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method signature="testIsEmpty(hust.cs.javacourse.search.index.AbstractPostingList, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5ed828d]" started-at="2024-05-04T13:22:54Z" name="testIsEmpty" data-provider="testPostingList" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[DocId: 1, word freq: 4
    Word positions: [1, 2, 3, 4]
, DocId: 2, word freq: 2
    Word positions: [5, 6]
]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method signature="testSort(hust.cs.javacourse.search.index.AbstractPostingList, [Ljava.lang.Integer;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5ed828d]" started-at="2024-05-04T13:22:54Z" name="testSort" data-provider="testPostingList" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[DocId: 2, word freq: 4
    Word positions: [5, 9, 7, 8]
, DocId: 3, word freq: 2
    Word positions: [10, 11]
, DocId: 4, word freq: 4
    Word positions: [1, 4, 3, 2]
]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.Integer;@124c278f]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSort -->
        <test-method signature="testClear(hust.cs.javacourse.search.index.AbstractPostingList, java.lang.Object)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5ed828d]" started-at="2024-05-04T13:22:54Z" name="testClear" data-provider="testPostingList" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
            <param index="1">
              <value is-null="true"/>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testClear -->
        <test-method signature="testTestRemove(hust.cs.javacourse.search.index.AbstractPostingList, [Lhust.cs.javacourse.search.index.AbstractPosting;)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5ed828d]" started-at="2024-05-04T13:22:54Z" name="testTestRemove" data-provider="testPostingList" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractPosting;@77167fb7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestRemove -->
        <test-method signature="testSize(hust.cs.javacourse.search.index.AbstractPostingList, int)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5ed828d]" started-at="2024-05-04T13:22:54Z" name="testSize" data-provider="testPostingList" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSize -->
        <test-method signature="testIsEmpty(hust.cs.javacourse.search.index.AbstractPostingList, boolean)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5ed828d]" started-at="2024-05-04T13:22:54Z" name="testIsEmpty" data-provider="testPostingList" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testIsEmpty -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractPostingList, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5ed828d]" started-at="2024-05-04T13:22:54Z" name="testWriteObject" data-provider="testPostingList" finished-at="2024-05-04T13:22:54Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[DocId: 1, word freq: 4
    Word positions: [1, 2, 3, 4]
, DocId: 2, word freq: 2
    Word positions: [5, 6]
]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/home/charswool/daily/java_course/lab/2024_java_experiment/test/Experiment1Test/test/config/..//ser/PostingList.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractPostingList, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5ed828d]" started-at="2024-05-04T13:22:54Z" name="testReadObject" data-provider="testPostingList" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[DocId: 1, word freq: 4
    Word positions: [1, 2, 3, 4]
, DocId: 2, word freq: 2
    Word positions: [5, 6]
]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/home/charswool/daily/java_course/lab/2024_java_experiment/test/Experiment1Test/test/config/..//ser/PostingList.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
      </class> <!-- hust.cs.javacourse.search.index.PostingListTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/PostingListTest.java -->
    <test started-at="2024-05-04T13:22:54Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/DocumentTest.java" finished-at="2024-05-04T13:22:54Z" duration-ms="4">
      <class name="hust.cs.javacourse.search.index.DocumentTest">
        <test-method signature="testGetDocId(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@4eb7f003]" started-at="2024-05-04T13:22:54Z" name="testGetDocId" data-provider="testDocument" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=1, docPath='C:/1.txt, tuples=[aaa 1 17]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testSetDocId(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@4eb7f003]" started-at="2024-05-04T13:22:54Z" name="testSetDocId" data-provider="testDocument" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=2, docPath='null, tuples=[]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDocId -->
        <test-method signature="testContains(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractTermTuple)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@4eb7f003]" started-at="2024-05-04T13:22:54Z" name="testContains" data-provider="testDocument" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=1, docPath='C:/1.txt, tuples=[aaa 1 17, bbb 1 30]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[aaa 1 17]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method signature="testAddTuple(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractTermTuple)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@4eb7f003]" started-at="2024-05-04T13:22:54Z" name="testAddTuple" data-provider="testDocument" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=1, docPath='C:/1.txt, tuples=[aaa 1 17]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[aaa 1 17]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddTuple -->
        <test-method signature="testSetDocPath(hust.cs.javacourse.search.index.AbstractDocument, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@4eb7f003]" started-at="2024-05-04T13:22:54Z" name="testSetDocPath" data-provider="testDocument" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=0, docPath='C:/2.txt, tuples=[]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/2.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetDocPath -->
        <test-method signature="testGetTupleSize(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@4eb7f003]" started-at="2024-05-04T13:22:54Z" name="testGetTupleSize" data-provider="testDocument" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=1, docPath='C:/1.txt, tuples=[]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTupleSize -->
        <test-method signature="testGetDocPath(hust.cs.javacourse.search.index.AbstractDocument, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@4eb7f003]" started-at="2024-05-04T13:22:54Z" name="testGetDocPath" data-provider="testDocument" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=1, docPath='C:/1.txt, tuples=[aaa 1 17]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[C:/1.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocPath -->
        <test-method signature="testGetTupleSize(hust.cs.javacourse.search.index.AbstractDocument, int)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@4eb7f003]" started-at="2024-05-04T13:22:54Z" name="testGetTupleSize" data-provider="testDocument" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=1, docPath='C:/1.txt, tuples=[aaa 1 17, bbb 1 30]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTupleSize -->
        <test-method signature="testGetTuple(hust.cs.javacourse.search.index.AbstractDocument, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@4eb7f003]" started-at="2024-05-04T13:22:54Z" name="testGetTuple" data-provider="testDocument" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=1, docPath='C:/1.txt, tuples=[aaa 1 17, bbb 1 30]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[aaa 1 17, bbb 1 30]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTuple -->
        <test-method signature="testContains(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractTermTuple)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@4eb7f003]" started-at="2024-05-04T13:22:54Z" name="testContains" data-provider="testDocument" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=1, docPath='C:/1.txt, tuples=[aaa 1 17, bbb 1 30]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[bbb 1 30]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testContains -->
        <test-method signature="testGetTuples(hust.cs.javacourse.search.index.AbstractDocument, java.util.List)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@4eb7f003]" started-at="2024-05-04T13:22:54Z" name="testGetTuples" data-provider="testDocument" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=1, docPath='C:/1.txt, tuples=[aaa 1 17, bbb 1 30]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[aaa 1 17, bbb 1 30]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTuples -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractDocument, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.DocumentTest@4eb7f003]" started-at="2024-05-04T13:22:54Z" name="testTestToString" data-provider="testDocument" finished-at="2024-05-04T13:22:54Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=1, docPath='C:/1.txt, tuples=[aaa 1 17, bbb 1 30]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@2bbf180e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
      </class> <!-- hust.cs.javacourse.search.index.DocumentTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/DocumentTest.java -->
    <test started-at="2024-05-04T13:22:54Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/TermTupleScannerTest.java" finished-at="2024-05-04T13:22:54Z" duration-ms="3">
      <class name="hust.cs.javacourse.search.parse.TermTupleScannerTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.TermTupleScannerTest@6a1aab78]" started-at="2024-05-04T13:22:54Z" name="testNext" data-provider="testTermTupleScanner" finished-at="2024-05-04T13:22:54Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.TermTupleScanner@78aab498]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[aaa 1 0, bbb 1 1, ccc 1 2, ddd 1 3, is 1 4, f17 1 5, 2020 1 6, ab 1 7, ababababababababababab 1 8]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.TermTupleScannerTest@6a1aab78]" started-at="2024-05-04T13:22:54Z" name="testNext" data-provider="testTermTupleScanner" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.TermTupleScanner@5dd6264]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[activity 1 0, destination 1 1, emergency 1 2, 26% 1 3, u571 1 4, because 1 5, hence 1 6, capital 1 7, i 1 8, frozen 1 9, benefits 1 10, google 1 11, hahahahahahahahahahahahah 1 12, ha 1 13, frozen 1 14, google 1 15]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.TermTupleScannerTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/TermTupleScannerTest.java -->
    <test started-at="2024-05-04T13:22:54Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/StopWordTermTupleFilterTest.java" finished-at="2024-05-04T13:22:54Z" duration-ms="3">
      <class name="hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest@4671e53b]" started-at="2024-05-04T13:22:54Z" name="testNext" data-provider="testStopWordTermTupleFilter" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.StopWordTermTupleFilter@75329a49]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[aaa 1 0, bbb 1 1, ccc 1 2, ddd 1 3, f17 1 4, 2020 1 5, ab 1 6, ababababababababababab 1 7]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest@4671e53b]" started-at="2024-05-04T13:22:54Z" name="testNext" data-provider="testStopWordTermTupleFilter" finished-at="2024-05-04T13:22:54Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.StopWordTermTupleFilter@161479c6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[aaa 1 0, bbb 1 1, ccc 1 3, ddd 1 4, f17 1 6, 2020 1 7, ab 1 8, ababababababababababab 1 10]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest@4671e53b]" started-at="2024-05-04T13:22:54Z" name="testNext" data-provider="testStopWordTermTupleFilter" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.StopWordTermTupleFilter@4313f5bc]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[activity 1 0, destination 1 1, emergency 1 2, 26% 1 3, u571 1 4, capital 1 7, frozen 1 9, benefits 1 10, google 1 11, hahahahahahahahahahahahah 1 12, ha 1 13, frozen 1 14, google 1 15]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.StopWordTermTupleFilterTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/StopWordTermTupleFilterTest.java -->
    <test started-at="2024-05-04T13:22:54Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/PatternTermTupleFilterTest.java" finished-at="2024-05-04T13:22:54Z" duration-ms="1">
      <class name="hust.cs.javacourse.search.parse.PatternTermTupleFilterTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.PatternTermTupleFilterTest@3ecd23d9]" started-at="2024-05-04T13:22:54Z" name="testNext" data-provider="testPatternTermTupleFilter" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@49c386c8]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[activity 1 0, destination 1 1, emergency 1 2, because 1 5, hence 1 6, capital 1 7, i 1 8, frozen 1 9, benefits 1 10, google 1 11, hahahahahahahahahahahahah 1 12, ha 1 13, frozen 1 14, google 1 15]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.PatternTermTupleFilterTest@3ecd23d9]" started-at="2024-05-04T13:22:54Z" name="testNext" data-provider="testPatternTermTupleFilter" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@1f0f1111]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[aaa 1 0, bbb 1 2, ab 1 3, ccc 1 4, ddd 1 5, ababababababababababab 1 7]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.PatternTermTupleFilterTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/PatternTermTupleFilterTest.java -->
    <test started-at="2024-05-04T13:22:54Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/LengthTermTupleFilterTest.java" finished-at="2024-05-04T13:22:54Z" duration-ms="1">
      <class name="hust.cs.javacourse.search.parse.LengthTermTupleFilterTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.LengthTermTupleFilterTest@cb0ed20]" started-at="2024-05-04T13:22:54Z" name="testNext" data-provider="testLengthTermTupleFilter" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.LengthTermTupleFilter@794cb805]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[activity 1 0, destination 1 1, emergency 1 2, 26% 1 3, u571 1 4, because 1 5, hence 1 6, capital 1 7, frozen 1 9, benefits 1 10, google 1 11, frozen 1 14, google 1 15]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.LengthTermTupleFilterTest@cb0ed20]" started-at="2024-05-04T13:22:54Z" name="testNext" data-provider="testLengthTermTupleFilter" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.LengthTermTupleFilter@1f3f4916]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[aaa 1 0, bbb 1 1, ccc 1 3, ddd 1 4, f17 1 5, 2020 1 6]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.LengthTermTupleFilterTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/LengthTermTupleFilterTest.java -->
    <test started-at="2024-05-04T13:22:54Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/ScannerFilterAllInOneTest.java" finished-at="2024-05-04T13:22:54Z" duration-ms="2">
      <class name="hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest">
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest@543c6f6d]" started-at="2024-05-04T13:22:54Z" name="testNext" data-provider="testScannerFilterAllInOne" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@60d8c9b7]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[aaa 1 1, bbb 1 2, ccc 1 4, ddd 1 6]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
        <test-method signature="testNext(hust.cs.javacourse.search.parse.AbstractTermTupleStream, java.util.List)[pri:0, instance:hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest@543c6f6d]" started-at="2024-05-04T13:22:54Z" name="testNext" data-provider="testScannerFilterAllInOne" finished-at="2024-05-04T13:22:54Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[hust.cs.javacourse.search.parse.impl.PatternTermTupleFilter@48aaecc3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[activity 1 0, destination 1 1, emergency 1 2, capital 1 7, frozen 1 9, benefits 1 10, google 1 11, frozen 1 14, google 1 15]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNext -->
      </class> <!-- hust.cs.javacourse.search.parse.ScannerFilterAllInOneTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/parse/ScannerFilterAllInOneTest.java -->
    <test started-at="2024-05-04T13:22:54Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/DocumentBuilderTest.java" finished-at="2024-05-04T13:22:54Z" duration-ms="216">
      <class name="hust.cs.javacourse.search.index.DocumentBuilderTest">
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@22eeefeb]" started-at="2024-05-04T13:22:54Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=0, docPath='/home/charswool/daily/java_course/lab/2024_java_experiment/test/Experiment1Test/test/config/..//text/2.txt, tuples=[activity 1 0, destination 1 1, emergency 1 2, 26% 1 3, u571 1 4, because 1 5, hence 1 6, capital 1 7, i 1 8, frozen 1 9, benefits 1 10, google 1 11, hahahahahahahahahahahahah 1 12, ha 1 13, frozen 1 14, google 1 15]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Document{docId=0, docPath='D:\IdeaWorkspace\SeachEngine/text/2.txt, tuples=[activity 1 0, destination 1 1, emergency 1 2, 26% 1 3, u571 1 4, because 1 5, hence 1 6, capital 1 7, i 1 8, frozen 1 9, benefits 1 10, google 1 11, hahahahahahahahahahahahah 1 12, ha 1 13, frozen 1 14, google 1 15]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@22eeefeb]" started-at="2024-05-04T13:22:54Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=0, docPath='/home/charswool/daily/java_course/lab/2024_java_experiment/test/Experiment1Test/test/config/..//text/2.txt, tuples=[activity 1 0, destination 1 1, emergency 1 2, because 1 5, hence 1 6, capital 1 7, i 1 8, frozen 1 9, benefits 1 10, google 1 11, hahahahahahahahahahahahah 1 12, ha 1 13, frozen 1 14, google 1 15]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Document{docId=0, docPath='D:\IdeaWorkspace\SeachEngine/text/2.txt, tuples=[activity 1 0, destination 1 1, emergency 1 2, because 1 5, hence 1 6, capital 1 7, i 1 8, frozen 1 9, benefits 1 10, google 1 11, hahahahahahahahahahahahah 1 12, ha 1 13, frozen 1 14, google 1 15]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@22eeefeb]" started-at="2024-05-04T13:22:54Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=0, docPath='/home/charswool/daily/java_course/lab/2024_java_experiment/test/Experiment1Test/test/config/..//text/2.txt, tuples=[activity 1 0, destination 1 1, emergency 1 2, 26% 1 3, u571 1 4, because 1 5, hence 1 6, capital 1 7, frozen 1 9, benefits 1 10, google 1 11, frozen 1 14, google 1 15]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Document{docId=0, docPath='D:\IdeaWorkspace\SeachEngine/text/2.txt, tuples=[activity 1 0, destination 1 1, emergency 1 2, 26% 1 3, u571 1 4, because 1 5, hence 1 6, capital 1 7, frozen 1 9, benefits 1 10, google 1 11, frozen 1 14, google 1 15]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@22eeefeb]" started-at="2024-05-04T13:22:54Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=0, docPath='/home/charswool/daily/java_course/lab/2024_java_experiment/test/Experiment1Test/test/config/..//text/2.txt, tuples=[activity 1 0, destination 1 1, emergency 1 2, capital 1 7, frozen 1 9, benefits 1 10, google 1 11, frozen 1 14, google 1 15]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Document{docId=0, docPath='D:\IdeaWorkspace\SeachEngine/text/2.txt, tuples=[activity 1 0, destination 1 1, emergency 1 2, capital 1 7, frozen 1 9, benefits 1 10, google 1 11, frozen 1 14, google 1 15]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@22eeefeb]" started-at="2024-05-04T13:22:54Z" name="testBuild" data-provider="testDocumentBuilder" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=0, docPath='/home/charswool/daily/java_course/lab/2024_java_experiment/test/Experiment1Test/test/config/..//text/2.txt, tuples=[activity 1 0, destination 1 1, emergency 1 2, 26% 1 3, u571 1 4, capital 1 7, frozen 1 9, benefits 1 10, google 1 11, hahahahahahahahahahahahah 1 12, ha 1 13, frozen 1 14, google 1 15]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Document{docId=0, docPath='D:\IdeaWorkspace\SeachEngine/text/2.txt, tuples=[activity 1 0, destination 1 1, emergency 1 2, 26% 1 3, u571 1 4, capital 1 7, frozen 1 9, benefits 1 10, google 1 11, hahahahahahahahahahahahah 1 12, ha 1 13, frozen 1 14, google 1 15]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuild -->
        <test-method signature="testTestBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@22eeefeb]" started-at="2024-05-04T13:22:54Z" name="testTestBuild" data-provider="testDocumentBuilder" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=0, docPath='/home/charswool/daily/java_course/lab/2024_java_experiment/test/Experiment1Test/test/config/..//text/2.txt, tuples=[activity 1 0, destination 1 1, emergency 1 2, capital 1 7, frozen 1 9, benefits 1 10, google 1 11, frozen 1 14, google 1 15]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Document{docId=0, docPath='D:\IdeaWorkspace\SeachEngine/text/2.txt, tuples=[activity 1 0, destination 1 1, emergency 1 2, capital 1 7, frozen 1 9, benefits 1 10, google 1 11, frozen 1 14, google 1 15]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestBuild -->
        <test-method signature="testTestBuild(hust.cs.javacourse.search.index.AbstractDocument, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.DocumentBuilderTest@22eeefeb]" started-at="2024-05-04T13:22:54Z" name="testTestBuild" data-provider="testDocumentBuilder" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Document{docId=0, docPath='/home/charswool/daily/java_course/lab/2024_java_experiment/test/Experiment1Test/test/config/..//text/2.txt, tuples=[activity 1 0, destination 1 1, emergency 1 2, capital 1 7, frozen 1 9, benefits 1 10, google 1 11, frozen 1 14, google 1 15]}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Document{docId=0, docPath='D:\IdeaWorkspace\SeachEngine/text/2.txt, tuples=[activity 1 0, destination 1 1, emergency 1 2, capital 1 7, frozen 1 9, benefits 1 10, google 1 11, frozen 1 14, google 1 15]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestBuild -->
      </class> <!-- hust.cs.javacourse.search.index.DocumentBuilderTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/DocumentBuilderTest.java -->
    <test started-at="2024-05-04T13:22:54Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/IndexTest.java" finished-at="2024-05-04T13:22:54Z" duration-ms="109">
      <class name="hust.cs.javacourse.search.index.IndexTest">
        <test-method signature="testTestToString(hust.cs.javacourse.search.index.AbstractIndex, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@6ec8211c]" started-at="2024-05-04T13:22:54Z" name="testTestToString" data-provider="testIndex" finished-at="2024-05-04T13:22:54Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docIdToDocPathMapping: {0=D:\IdeaWorkspace\SeachEngine\text\1.txt, 1=D:\IdeaWorkspace\SeachEngine\text\2.txt, 2=D:\IdeaWorkspace\SeachEngine\text\3.txt}
termToPostingListMapping: {activity=[DocId: 0, word freq: 3
    Word positions: [0, 1, 6]
, DocId: 1, word freq: 1
    Word positions: [0]
], benefits=[DocId: 0, word freq: 2
    Word positions: [2, 7]
, DocId: 1, word freq: 1
    Word positions: [10]
], capital=[DocId: 0, word freq: 2
    Word positions: [3, 8]
, DocId: 1, word freq: 1
    Word positions: [7]
], destination=[DocId: 0, word freq: 2
    Word positions: [4, 9]
, DocId: 1, word freq: 1
    Word positions: [1]
], emergency=[DocId: 0, word freq: 1
    Word positions: [10]
, DocId: 1, word freq: 1
    Word positions: [2]
], fizzy=[DocId: 0, word freq: 1
    Word positions: [5]
], frozen=[DocId: 1, word freq: 2
    Word positions: [9, 14]
], google=[DocId: 1, word freq: 2
    Word positions: [11, 15]
], marketplace=[DocId: 2, word freq: 1
    Word positions: [0]
], medical=[DocId: 2, word freq: 1
    Word positions: [1]
], notification=[DocId: 2, word freq: 1
    Word positions: [3]
], peninsula=[DocId: 2, word freq: 1
    Word positions: [5]
], pollution=[DocId: 2, word freq: 1
    Word positions: [7]
]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@46944ca9]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testAddDocument([Lhust.cs.javacourse.search.index.AbstractIndex;, hust.cs.javacourse.search.index.AbstractDocument)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@6ec8211c]" started-at="2024-05-04T13:22:54Z" name="testAddDocument" data-provider="testIndex" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.index.AbstractIndex;@17aad511]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Document{docId=1, docPath='D:\IdeaWorkspace\SeachEngine/text/2.txt, tuples=[activity 1 0, destination 1 1, emergency 1 2, capital 1 7, frozen 1 9, benefits 1 10, google 1 11, frozen 1 14, google 1 15]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddDocument -->
        <test-method signature="testLoad(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@6ec8211c]" started-at="2024-05-04T13:22:54Z" name="testLoad" data-provider="testIndex" finished-at="2024-05-04T13:22:54Z" duration-ms="6" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docIdToDocPathMapping: {0=D:\IdeaWorkspace\SeachEngine\text\1.txt, 1=D:\IdeaWorkspace\SeachEngine\text\2.txt, 2=D:\IdeaWorkspace\SeachEngine\text\3.txt}
termToPostingListMapping: {activity=[DocId: 0, word freq: 3
    Word positions: [0, 1, 6]
, DocId: 1, word freq: 1
    Word positions: [0]
], benefits=[DocId: 0, word freq: 2
    Word positions: [2, 7]
, DocId: 1, word freq: 1
    Word positions: [10]
], capital=[DocId: 0, word freq: 2
    Word positions: [3, 8]
, DocId: 1, word freq: 1
    Word positions: [7]
], destination=[DocId: 0, word freq: 2
    Word positions: [4, 9]
, DocId: 1, word freq: 1
    Word positions: [1]
], emergency=[DocId: 0, word freq: 1
    Word positions: [10]
, DocId: 1, word freq: 1
    Word positions: [2]
], fizzy=[DocId: 0, word freq: 1
    Word positions: [5]
], frozen=[DocId: 1, word freq: 2
    Word positions: [9, 14]
], google=[DocId: 1, word freq: 2
    Word positions: [11, 15]
], marketplace=[DocId: 2, word freq: 1
    Word positions: [0]
], medical=[DocId: 2, word freq: 1
    Word positions: [1]
], notification=[DocId: 2, word freq: 1
    Word positions: [3]
], peninsula=[DocId: 2, word freq: 1
    Word positions: [5]
], pollution=[DocId: 2, word freq: 1
    Word positions: [7]
]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/home/charswool/daily/java_course/lab/2024_java_experiment/test/Experiment1Test/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLoad -->
        <test-method signature="testSave(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@6ec8211c]" started-at="2024-05-04T13:22:54Z" name="testSave" data-provider="testIndex" finished-at="2024-05-04T13:22:54Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docIdToDocPathMapping: {0=D:\IdeaWorkspace\SeachEngine\text\1.txt, 1=D:\IdeaWorkspace\SeachEngine\text\2.txt, 2=D:\IdeaWorkspace\SeachEngine\text\3.txt}
termToPostingListMapping: {activity=[DocId: 0, word freq: 3
    Word positions: [0, 1, 6]
, DocId: 1, word freq: 1
    Word positions: [0]
], benefits=[DocId: 0, word freq: 2
    Word positions: [2, 7]
, DocId: 1, word freq: 1
    Word positions: [10]
], capital=[DocId: 0, word freq: 2
    Word positions: [3, 8]
, DocId: 1, word freq: 1
    Word positions: [7]
], destination=[DocId: 0, word freq: 2
    Word positions: [4, 9]
, DocId: 1, word freq: 1
    Word positions: [1]
], emergency=[DocId: 0, word freq: 1
    Word positions: [10]
, DocId: 1, word freq: 1
    Word positions: [2]
], fizzy=[DocId: 0, word freq: 1
    Word positions: [5]
], frozen=[DocId: 1, word freq: 2
    Word positions: [9, 14]
], google=[DocId: 1, word freq: 2
    Word positions: [11, 15]
], marketplace=[DocId: 2, word freq: 1
    Word positions: [0]
], medical=[DocId: 2, word freq: 1
    Word positions: [1]
], notification=[DocId: 2, word freq: 1
    Word positions: [3]
], peninsula=[DocId: 2, word freq: 1
    Word positions: [5]
], pollution=[DocId: 2, word freq: 1
    Word positions: [7]
]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/home/charswool/daily/java_course/lab/2024_java_experiment/test/Experiment1Test/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSave -->
        <test-method signature="testSearch(hust.cs.javacourse.search.index.AbstractIndex, hust.cs.javacourse.search.index.AbstractPostingList)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@6ec8211c]" started-at="2024-05-04T13:22:54Z" name="testSearch" data-provider="testIndex" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docIdToDocPathMapping: {0=D:\IdeaWorkspace\SeachEngine\text\1.txt, 1=D:\IdeaWorkspace\SeachEngine\text\2.txt, 2=D:\IdeaWorkspace\SeachEngine\text\3.txt}
termToPostingListMapping: {activity=[DocId: 0, word freq: 3
    Word positions: [0, 1, 6]
, DocId: 1, word freq: 1
    Word positions: [0]
], benefits=[DocId: 0, word freq: 2
    Word positions: [2, 7]
, DocId: 1, word freq: 1
    Word positions: [10]
], capital=[DocId: 0, word freq: 2
    Word positions: [3, 8]
, DocId: 1, word freq: 1
    Word positions: [7]
], destination=[DocId: 0, word freq: 2
    Word positions: [4, 9]
, DocId: 1, word freq: 1
    Word positions: [1]
], emergency=[DocId: 0, word freq: 1
    Word positions: [10]
, DocId: 1, word freq: 1
    Word positions: [2]
], fizzy=[DocId: 0, word freq: 1
    Word positions: [5]
], frozen=[DocId: 1, word freq: 2
    Word positions: [9, 14]
], google=[DocId: 1, word freq: 2
    Word positions: [11, 15]
], marketplace=[DocId: 2, word freq: 1
    Word positions: [0]
], medical=[DocId: 2, word freq: 1
    Word positions: [1]
], notification=[DocId: 2, word freq: 1
    Word positions: [3]
], peninsula=[DocId: 2, word freq: 1
    Word positions: [5]
], pollution=[DocId: 2, word freq: 1
    Word positions: [7]
]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[DocId: 0, word freq: 3
    Word positions: [0, 1, 6]
, DocId: 1, word freq: 1
    Word positions: [0]
]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method signature="testGetDictionary(hust.cs.javacourse.search.index.AbstractIndex, java.util.Set)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@6ec8211c]" started-at="2024-05-04T13:22:54Z" name="testGetDictionary" data-provider="testIndex" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docIdToDocPathMapping: {0=D:\IdeaWorkspace\SeachEngine\text\1.txt, 1=D:\IdeaWorkspace\SeachEngine\text\2.txt, 2=D:\IdeaWorkspace\SeachEngine\text\3.txt}
termToPostingListMapping: {activity=[DocId: 0, word freq: 3
    Word positions: [0, 1, 6]
, DocId: 1, word freq: 1
    Word positions: [0]
], benefits=[DocId: 0, word freq: 2
    Word positions: [2, 7]
, DocId: 1, word freq: 1
    Word positions: [10]
], capital=[DocId: 0, word freq: 2
    Word positions: [3, 8]
, DocId: 1, word freq: 1
    Word positions: [7]
], destination=[DocId: 0, word freq: 2
    Word positions: [4, 9]
, DocId: 1, word freq: 1
    Word positions: [1]
], emergency=[DocId: 0, word freq: 1
    Word positions: [10]
, DocId: 1, word freq: 1
    Word positions: [2]
], fizzy=[DocId: 0, word freq: 1
    Word positions: [5]
], frozen=[DocId: 1, word freq: 2
    Word positions: [9, 14]
], google=[DocId: 1, word freq: 2
    Word positions: [11, 15]
], marketplace=[DocId: 2, word freq: 1
    Word positions: [0]
], medical=[DocId: 2, word freq: 1
    Word positions: [1]
], notification=[DocId: 2, word freq: 1
    Word positions: [3]
], peninsula=[DocId: 2, word freq: 1
    Word positions: [5]
], pollution=[DocId: 2, word freq: 1
    Word positions: [7]
]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[activity, benefits, capital, destination, emergency, fizzy, frozen, google, marketplace, medical, notification, peninsula, pollution]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDictionary -->
        <test-method signature="testWriteObject(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@6ec8211c]" started-at="2024-05-04T13:22:54Z" name="testWriteObject" data-provider="testIndex" finished-at="2024-05-04T13:22:54Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docIdToDocPathMapping: {0=D:\IdeaWorkspace\SeachEngine\text\1.txt, 1=D:\IdeaWorkspace\SeachEngine\text\2.txt, 2=D:\IdeaWorkspace\SeachEngine\text\3.txt}
termToPostingListMapping: {activity=[DocId: 0, word freq: 3
    Word positions: [0, 1, 6]
, DocId: 1, word freq: 1
    Word positions: [0]
], benefits=[DocId: 0, word freq: 2
    Word positions: [2, 7]
, DocId: 1, word freq: 1
    Word positions: [10]
], capital=[DocId: 0, word freq: 2
    Word positions: [3, 8]
, DocId: 1, word freq: 1
    Word positions: [7]
], destination=[DocId: 0, word freq: 2
    Word positions: [4, 9]
, DocId: 1, word freq: 1
    Word positions: [1]
], emergency=[DocId: 0, word freq: 1
    Word positions: [10]
, DocId: 1, word freq: 1
    Word positions: [2]
], fizzy=[DocId: 0, word freq: 1
    Word positions: [5]
], frozen=[DocId: 1, word freq: 2
    Word positions: [9, 14]
], google=[DocId: 1, word freq: 2
    Word positions: [11, 15]
], marketplace=[DocId: 2, word freq: 1
    Word positions: [0]
], medical=[DocId: 2, word freq: 1
    Word positions: [1]
], notification=[DocId: 2, word freq: 1
    Word positions: [3]
], peninsula=[DocId: 2, word freq: 1
    Word positions: [5]
], pollution=[DocId: 2, word freq: 1
    Word positions: [7]
]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/home/charswool/daily/java_course/lab/2024_java_experiment/test/Experiment1Test/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWriteObject -->
        <test-method signature="testReadObject(hust.cs.javacourse.search.index.AbstractIndex, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@6ec8211c]" started-at="2024-05-04T13:22:54Z" name="testReadObject" data-provider="testIndex" finished-at="2024-05-04T13:22:54Z" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docIdToDocPathMapping: {0=D:\IdeaWorkspace\SeachEngine\text\1.txt, 1=D:\IdeaWorkspace\SeachEngine\text\2.txt, 2=D:\IdeaWorkspace\SeachEngine\text\3.txt}
termToPostingListMapping: {activity=[DocId: 0, word freq: 3
    Word positions: [0, 1, 6]
, DocId: 1, word freq: 1
    Word positions: [0]
], benefits=[DocId: 0, word freq: 2
    Word positions: [2, 7]
, DocId: 1, word freq: 1
    Word positions: [10]
], capital=[DocId: 0, word freq: 2
    Word positions: [3, 8]
, DocId: 1, word freq: 1
    Word positions: [7]
], destination=[DocId: 0, word freq: 2
    Word positions: [4, 9]
, DocId: 1, word freq: 1
    Word positions: [1]
], emergency=[DocId: 0, word freq: 1
    Word positions: [10]
, DocId: 1, word freq: 1
    Word positions: [2]
], fizzy=[DocId: 0, word freq: 1
    Word positions: [5]
], frozen=[DocId: 1, word freq: 2
    Word positions: [9, 14]
], google=[DocId: 1, word freq: 2
    Word positions: [11, 15]
], marketplace=[DocId: 2, word freq: 1
    Word positions: [0]
], medical=[DocId: 2, word freq: 1
    Word positions: [1]
], notification=[DocId: 2, word freq: 1
    Word positions: [3]
], peninsula=[DocId: 2, word freq: 1
    Word positions: [5]
], pollution=[DocId: 2, word freq: 1
    Word positions: [7]
]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[/home/charswool/daily/java_course/lab/2024_java_experiment/test/Experiment1Test/test/config/..//index/index_1_2_3_txt.dat]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testReadObject -->
        <test-method signature="testOptimize(hust.cs.javacourse.search.index.AbstractIndex, hust.cs.javacourse.search.index.AbstractIndex)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@6ec8211c]" started-at="2024-05-04T13:22:54Z" name="testOptimize" data-provider="testIndex" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docIdToDocPathMapping: {0=D:\IdeaWorkspace\SeachEngine\text\1.txt, 1=D:\IdeaWorkspace\SeachEngine\text\2.txt, 2=D:\IdeaWorkspace\SeachEngine\text\3.txt}
termToPostingListMapping: {activity=[DocId: 0, word freq: 3
    Word positions: [0, 1, 6]
, DocId: 1, word freq: 1
    Word positions: [0]
], benefits=[DocId: 0, word freq: 2
    Word positions: [2, 7]
, DocId: 1, word freq: 1
    Word positions: [10]
], capital=[DocId: 0, word freq: 2
    Word positions: [3, 8]
, DocId: 1, word freq: 1
    Word positions: [7]
], destination=[DocId: 0, word freq: 2
    Word positions: [4, 9]
, DocId: 1, word freq: 1
    Word positions: [1]
], emergency=[DocId: 0, word freq: 1
    Word positions: [10]
, DocId: 1, word freq: 1
    Word positions: [2]
], fizzy=[DocId: 0, word freq: 1
    Word positions: [5]
], frozen=[DocId: 1, word freq: 2
    Word positions: [9, 14]
], google=[DocId: 1, word freq: 2
    Word positions: [11, 15]
], marketplace=[DocId: 2, word freq: 1
    Word positions: [0]
], medical=[DocId: 2, word freq: 1
    Word positions: [1]
], notification=[DocId: 2, word freq: 1
    Word positions: [3]
], peninsula=[DocId: 2, word freq: 1
    Word positions: [5]
], pollution=[DocId: 2, word freq: 1
    Word positions: [7]
]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docIdToDocPathMapping: {0=D:\IdeaWorkspace\SeachEngine\text\1.txt, 1=D:\IdeaWorkspace\SeachEngine\text\2.txt, 2=D:\IdeaWorkspace\SeachEngine\text\3.txt}
termToPostingListMapping: {activity=[DocId: 0, word freq: 3
    Word positions: [0, 1, 6]
, DocId: 1, word freq: 1
    Word positions: [0]
], benefits=[DocId: 0, word freq: 2
    Word positions: [2, 7]
, DocId: 1, word freq: 1
    Word positions: [10]
], capital=[DocId: 0, word freq: 2
    Word positions: [3, 8]
, DocId: 1, word freq: 1
    Word positions: [7]
], destination=[DocId: 0, word freq: 2
    Word positions: [4, 9]
, DocId: 1, word freq: 1
    Word positions: [1]
], emergency=[DocId: 0, word freq: 1
    Word positions: [10]
, DocId: 1, word freq: 1
    Word positions: [2]
], fizzy=[DocId: 0, word freq: 1
    Word positions: [5]
], frozen=[DocId: 1, word freq: 2
    Word positions: [9, 14]
], google=[DocId: 1, word freq: 2
    Word positions: [11, 15]
], marketplace=[DocId: 2, word freq: 1
    Word positions: [0]
], medical=[DocId: 2, word freq: 1
    Word positions: [1]
], notification=[DocId: 2, word freq: 1
    Word positions: [3]
], peninsula=[DocId: 2, word freq: 1
    Word positions: [5]
], pollution=[DocId: 2, word freq: 1
    Word positions: [7]
]}
]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOptimize -->
        <test-method signature="testGetDocName(hust.cs.javacourse.search.index.AbstractIndex, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.index.IndexTest@6ec8211c]" started-at="2024-05-04T13:22:54Z" name="testGetDocName" data-provider="testIndex" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[docIdToDocPathMapping: {0=D:\IdeaWorkspace\SeachEngine\text\1.txt, 1=D:\IdeaWorkspace\SeachEngine\text\2.txt, 2=D:\IdeaWorkspace\SeachEngine\text\3.txt}
termToPostingListMapping: {activity=[DocId: 0, word freq: 3
    Word positions: [0, 1, 6]
, DocId: 1, word freq: 1
    Word positions: [0]
], benefits=[DocId: 0, word freq: 2
    Word positions: [2, 7]
, DocId: 1, word freq: 1
    Word positions: [10]
], capital=[DocId: 0, word freq: 2
    Word positions: [3, 8]
, DocId: 1, word freq: 1
    Word positions: [7]
], destination=[DocId: 0, word freq: 2
    Word positions: [4, 9]
, DocId: 1, word freq: 1
    Word positions: [1]
], emergency=[DocId: 0, word freq: 1
    Word positions: [10]
, DocId: 1, word freq: 1
    Word positions: [2]
], fizzy=[DocId: 0, word freq: 1
    Word positions: [5]
], frozen=[DocId: 1, word freq: 2
    Word positions: [9, 14]
], google=[DocId: 1, word freq: 2
    Word positions: [11, 15]
], marketplace=[DocId: 2, word freq: 1
    Word positions: [0]
], medical=[DocId: 2, word freq: 1
    Word positions: [1]
], notification=[DocId: 2, word freq: 1
    Word positions: [3]
], peninsula=[DocId: 2, word freq: 1
    Word positions: [5]
], pollution=[DocId: 2, word freq: 1
    Word positions: [7]
]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@487db668]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocName -->
      </class> <!-- hust.cs.javacourse.search.index.IndexTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/IndexTest.java -->
    <test started-at="2024-05-04T13:22:54Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/IndexBuilderTest.java" finished-at="2024-05-04T13:22:54Z" duration-ms="8">
      <class name="hust.cs.javacourse.search.index.IndexBuilderTest">
        <test-method signature="testBuildIndex(hust.cs.javacourse.search.index.AbstractIndex, hust.cs.javacourse.search.index.AbstractIndex)[pri:0, instance:hust.cs.javacourse.search.index.IndexBuilderTest@704d6e83]" started-at="2024-05-04T13:22:54Z" name="testBuildIndex" data-provider="testIndexBuilder" finished-at="2024-05-04T13:22:54Z" duration-ms="1" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[docIdToDocPathMapping: {0=/home/charswool/daily/java_course/lab/2024_java_experiment/test/Experiment1Test/test/text/3.txt, 1=/home/charswool/daily/java_course/lab/2024_java_experiment/test/Experiment1Test/test/text/1.txt, 2=/home/charswool/daily/java_course/lab/2024_java_experiment/test/Experiment1Test/test/text/2.txt}
termToPostingListMapping: {activity=[DocId: 1, word freq: 3
    Word positions: [0, 1, 6]
, DocId: 2, word freq: 1
    Word positions: [0]
], benefits=[DocId: 1, word freq: 2
    Word positions: [2, 7]
, DocId: 2, word freq: 1
    Word positions: [10]
], capital=[DocId: 1, word freq: 2
    Word positions: [3, 8]
, DocId: 2, word freq: 1
    Word positions: [7]
], destination=[DocId: 1, word freq: 2
    Word positions: [4, 9]
, DocId: 2, word freq: 1
    Word positions: [1]
], emergency=[DocId: 1, word freq: 1
    Word positions: [10]
, DocId: 2, word freq: 1
    Word positions: [2]
], fizzy=[DocId: 1, word freq: 1
    Word positions: [5]
], frozen=[DocId: 2, word freq: 2
    Word positions: [9, 14]
], google=[DocId: 2, word freq: 2
    Word positions: [11, 15]
], marketplace=[DocId: 0, word freq: 1
    Word positions: [0]
], medical=[DocId: 0, word freq: 1
    Word positions: [1]
], notification=[DocId: 0, word freq: 1
    Word positions: [3]
], peninsula=[DocId: 0, word freq: 1
    Word positions: [5]
], pollution=[DocId: 0, word freq: 1
    Word positions: [7]
]}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[docIdToDocPathMapping: {0=D:\IdeaWorkspace\SeachEngine\text\1.txt, 1=D:\IdeaWorkspace\SeachEngine\text\2.txt, 2=D:\IdeaWorkspace\SeachEngine\text\3.txt}
termToPostingListMapping: {activity=[DocId: 0, word freq: 3
    Word positions: [0, 1, 6]
, DocId: 1, word freq: 1
    Word positions: [0]
], benefits=[DocId: 0, word freq: 2
    Word positions: [2, 7]
, DocId: 1, word freq: 1
    Word positions: [10]
], capital=[DocId: 0, word freq: 2
    Word positions: [3, 8]
, DocId: 1, word freq: 1
    Word positions: [7]
], destination=[DocId: 0, word freq: 2
    Word positions: [4, 9]
, DocId: 1, word freq: 1
    Word positions: [1]
], emergency=[DocId: 0, word freq: 1
    Word positions: [10]
, DocId: 1, word freq: 1
    Word positions: [2]
], fizzy=[DocId: 0, word freq: 1
    Word positions: [5]
], frozen=[DocId: 1, word freq: 2
    Word positions: [9, 14]
], google=[DocId: 1, word freq: 2
    Word positions: [11, 15]
], marketplace=[DocId: 2, word freq: 1
    Word positions: [0]
], medical=[DocId: 2, word freq: 1
    Word positions: [1]
], notification=[DocId: 2, word freq: 1
    Word positions: [3]
], peninsula=[DocId: 2, word freq: 1
    Word positions: [5]
], pollution=[DocId: 2, word freq: 1
    Word positions: [7]
]}
]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at hust.cs.javacourse.search.index.IndexBuilderTest.testBuildIndex(IndexBuilderTest.java:13)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.TestNG.privateMain(TestNG.java:1354)
at org.testng.TestNG.main(TestNG.java:1323)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testBuildIndex -->
      </class> <!-- hust.cs.javacourse.search.index.IndexBuilderTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/index/IndexBuilderTest.java -->
    <test started-at="2024-05-04T13:22:54Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/query/HitTest.java" finished-at="2024-05-04T13:22:54Z" duration-ms="29">
      <class name="hust.cs.javacourse.search.query.HitTest">
        <test-method signature="testGetDocId(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@149494d8]" started-at="2024-05-04T13:22:54Z" name="testGetDocId" data-provider="testHit" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DocId: 1
DocPath: D:\IdeaWorkspace\SeachEngine\text\2.txt
Content: activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
Score: -1.0
TermPostingMapping: {activity=DocId: 1, word freq: 1
    Word positions: [0]
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testGetDocId(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@149494d8]" started-at="2024-05-04T13:22:54Z" name="testGetDocId" data-provider="testHit" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DocId: 0
DocPath: D:\IdeaWorkspace\SeachEngine\text\1.txt
Content: activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
Score: -3.0
TermPostingMapping: {activity=DocId: 0, word freq: 3
    Word positions: [0, 1, 6]
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocId -->
        <test-method signature="testGetDocPath(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@149494d8]" started-at="2024-05-04T13:22:54Z" name="testGetDocPath" data-provider="testHit" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DocId: 0
DocPath: D:\IdeaWorkspace\SeachEngine\text\1.txt
Content: activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
Score: -3.0
TermPostingMapping: {activity=DocId: 0, word freq: 3
    Word positions: [0, 1, 6]
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:\IdeaWorkspace\SeachEngine\text\1.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocPath -->
        <test-method signature="testGetDocPath(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@149494d8]" started-at="2024-05-04T13:22:54Z" name="testGetDocPath" data-provider="testHit" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DocId: 1
DocPath: D:\IdeaWorkspace\SeachEngine\text\2.txt
Content: activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
Score: -1.0
TermPostingMapping: {activity=DocId: 1, word freq: 1
    Word positions: [0]
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[D:\IdeaWorkspace\SeachEngine\text\2.txt]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetDocPath -->
        <test-method signature="testGetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@149494d8]" started-at="2024-05-04T13:22:54Z" name="testGetContent" data-provider="testHit" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DocId: 0
DocPath: D:\IdeaWorkspace\SeachEngine\text\1.txt
Content: activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
Score: -3.0
TermPostingMapping: {activity=DocId: 0, word freq: 3
    Word positions: [0, 1, 6]
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContent -->
        <test-method signature="testGetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@149494d8]" started-at="2024-05-04T13:22:54Z" name="testGetContent" data-provider="testHit" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DocId: 1
DocPath: D:\IdeaWorkspace\SeachEngine\text\2.txt
Content: activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
Score: -1.0
TermPostingMapping: {activity=DocId: 1, word freq: 1
    Word positions: [0]
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetContent -->
        <test-method signature="testSetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@149494d8]" started-at="2024-05-04T13:22:54Z" name="testSetContent" data-provider="testHit" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DocId: 1
DocPath: D:\IdeaWorkspace\SeachEngine\text\2.txt
Content: new content2
Score: -1.0
TermPostingMapping: {activity=DocId: 1, word freq: 1
    Word positions: [0]
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[new content2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetContent -->
        <test-method signature="testSetContent(hust.cs.javacourse.search.query.AbstractHit, java.lang.String)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@149494d8]" started-at="2024-05-04T13:22:54Z" name="testSetContent" data-provider="testHit" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DocId: 0
DocPath: D:\IdeaWorkspace\SeachEngine\text\1.txt
Content: new content1
Score: -3.0
TermPostingMapping: {activity=DocId: 0, word freq: 3
    Word positions: [0, 1, 6]
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[new content1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetContent -->
        <test-method signature="testGetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@149494d8]" started-at="2024-05-04T13:22:54Z" name="testGetScore" data-provider="testHit" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DocId: 1
DocPath: D:\IdeaWorkspace\SeachEngine\text\2.txt
Content: activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
Score: -1.0
TermPostingMapping: {activity=DocId: 1, word freq: 1
    Word positions: [0]
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetScore -->
        <test-method signature="testGetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@149494d8]" started-at="2024-05-04T13:22:54Z" name="testGetScore" data-provider="testHit" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DocId: 0
DocPath: D:\IdeaWorkspace\SeachEngine\text\1.txt
Content: activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
Score: -3.0
TermPostingMapping: {activity=DocId: 0, word freq: 3
    Word positions: [0, 1, 6]
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetScore -->
        <test-method signature="testSetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@149494d8]" started-at="2024-05-04T13:22:54Z" name="testSetScore" data-provider="testHit" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DocId: 1
DocPath: D:\IdeaWorkspace\SeachEngine\text\2.txt
Content: activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
Score: 1.0
TermPostingMapping: {activity=DocId: 1, word freq: 1
    Word positions: [0]
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetScore -->
        <test-method signature="testSetScore(hust.cs.javacourse.search.query.AbstractHit, double)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@149494d8]" started-at="2024-05-04T13:22:54Z" name="testSetScore" data-provider="testHit" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DocId: 0
DocPath: D:\IdeaWorkspace\SeachEngine\text\1.txt
Content: activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
Score: 3.0
TermPostingMapping: {activity=DocId: 0, word freq: 3
    Word positions: [0, 1, 6]
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3.0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSetScore -->
        <test-method signature="testGetTermPostingMapping(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@149494d8]" started-at="2024-05-04T13:22:54Z" name="testGetTermPostingMapping" data-provider="testHit" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DocId: 1
DocPath: D:\IdeaWorkspace\SeachEngine\text\2.txt
Content: activity   destination emergency
26%  U571 because hence capital i 

frozen benefits google hahahahahahahahahahahahah ha frozen google
Score: -1.0
TermPostingMapping: {activity=DocId: 1, word freq: 1
    Word positions: [0]
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTermPostingMapping -->
        <test-method signature="testGetTermPostingMapping(hust.cs.javacourse.search.query.AbstractHit, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@149494d8]" started-at="2024-05-04T13:22:54Z" name="testGetTermPostingMapping" data-provider="testHit" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DocId: 0
DocPath: D:\IdeaWorkspace\SeachEngine\text\1.txt
Content: activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
Score: -3.0
TermPostingMapping: {activity=DocId: 0, word freq: 3
    Word positions: [0, 1, 6]
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetTermPostingMapping -->
        <test-method signature="testTestToString(hust.cs.javacourse.search.query.AbstractHit, [Ljava.lang.String;)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@149494d8]" started-at="2024-05-04T13:22:54Z" name="testTestToString" data-provider="testHit" finished-at="2024-05-04T13:22:54Z" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[DocId: 0
DocPath: D:\IdeaWorkspace\SeachEngine\text\1.txt
Content: activity activity benefits capital  destination


fizzy activity benefits capital destination emergency

2005 12-31 F16 the from  Pseudopseudohypoparathyroidism
Score: -3.0
TermPostingMapping: {activity=DocId: 0, word freq: 3
    Word positions: [0, 1, 6]
}
]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Ljava.lang.String;@1d3ac898]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestToString -->
        <test-method signature="testCompareTo([Lhust.cs.javacourse.search.query.AbstractHit;, int)[pri:0, instance:hust.cs.javacourse.search.query.HitTest@149494d8]" started-at="2024-05-04T13:22:54Z" name="testCompareTo" data-provider="testHit" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@604f2bd2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCompareTo -->
      </class> <!-- hust.cs.javacourse.search.query.HitTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/query/HitTest.java -->
    <test started-at="2024-05-04T13:22:54Z" name="D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/query/IndexSearcherTest.java" finished-at="2024-05-04T13:22:54Z" duration-ms="25">
      <class name="hust.cs.javacourse.search.index.PostingListTest">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:hust.cs.javacourse.search.index.PostingListTest@5ed828d]" started-at="2024-05-04T13:22:54Z" name="beforeSuite" finished-at="2024-05-04T13:22:54Z" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
      </class> <!-- hust.cs.javacourse.search.index.PostingListTest -->
      <class name="hust.cs.javacourse.search.query.IndexSearcherTest">
        <test-method signature="testSearch([Lhust.cs.javacourse.search.query.AbstractHit;, [Lhust.cs.javacourse.search.query.AbstractHit;)[pri:0, instance:hust.cs.javacourse.search.query.IndexSearcherTest@548ad73b]" started-at="2024-05-04T13:22:54Z" name="testSearch" data-provider="testIndexSearcher" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@f001896]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@13f17eb4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method signature="testSearch([Lhust.cs.javacourse.search.query.AbstractHit;, [Lhust.cs.javacourse.search.query.AbstractHit;)[pri:0, instance:hust.cs.javacourse.search.query.IndexSearcherTest@548ad73b]" started-at="2024-05-04T13:22:54Z" name="testSearch" data-provider="testIndexSearcher" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@765f05af]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@62f68dff]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSearch -->
        <test-method signature="testTestSearch([Lhust.cs.javacourse.search.query.AbstractHit;, [Lhust.cs.javacourse.search.query.AbstractHit;)[pri:0, instance:hust.cs.javacourse.search.query.IndexSearcherTest@548ad73b]" started-at="2024-05-04T13:22:54Z" name="testTestSearch" data-provider="testIndexSearcher" finished-at="2024-05-04T13:22:54Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@1d0d6318]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[Lhust.cs.javacourse.search.query.AbstractHit;@4bc28c33]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTestSearch -->
      </class> <!-- hust.cs.javacourse.search.query.IndexSearcherTest -->
    </test> <!-- D:/IdeaWorkspace/SeachEngine/test/hust/cs/javacourse/search/query/IndexSearcherTest.java -->
  </suite> <!-- All Test Suite -->
</testng-results>
